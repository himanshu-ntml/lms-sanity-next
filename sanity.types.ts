/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Video = {
  _id: string
  _type: 'video'
  _createdAt: string
  _updatedAt: string
  _rev: string
  name?: string
  source?: 'youtube' | 'vdocipher'
  url?: string
  videoId?: string
}

export type Choice = {
  _type: 'choice'
  text?: string
  isCorrect?: boolean
}

export type Mcq = {
  _id: string
  _type: 'mcq'
  _createdAt: string
  _updatedAt: string
  _rev: string
  question?: string
  choices?: Array<
    {
      _key: string
    } & Choice
  >
}

export type Quiz = Array<{
  _ref: string
  _type: 'reference'
  _weak?: boolean
  _key: string
  [internalGroqTypeReferenceTo]?: 'mcq'
}>

export type Faq = {
  _id: string
  _type: 'faq'
  _createdAt: string
  _updatedAt: string
  _rev: string
  question?: string
  answer?: string
}

export type Chapter = {
  _id: string
  _type: 'chapter'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  desc?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  items?: {
    videos?: Array<{
      _ref: string
      _type: 'reference'
      _weak?: boolean
      _key: string
      [internalGroqTypeReferenceTo]?: 'video'
    }>
    files?: Array<{
      name?: string
      file?: {
        asset?: {
          _ref: string
          _type: 'reference'
          _weak?: boolean
          [internalGroqTypeReferenceTo]?: 'sanity.fileAsset'
        }
        _type: 'file'
      }
      _key: string
    }>
    links?: Array<{
      name?: string
      url?: string
      _key: string
    }>
    quiz?: Quiz
    faqs?: Array<{
      _ref: string
      _type: 'reference'
      _weak?: boolean
      _key: string
      [internalGroqTypeReferenceTo]?: 'faq'
    }>
  }
}

export type Course = {
  _id: string
  _type: 'course'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  slug?: Slug
  summary?: string
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  desc?: Array<{
    children?: Array<{
      marks?: Array<string>
      text?: string
      _type: 'span'
      _key: string
    }>
    style?: 'normal' | 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'blockquote'
    listItem?: 'bullet' | 'number'
    markDefs?: Array<{
      href?: string
      _type: 'link'
      _key: string
    }>
    level?: number
    _type: 'block'
    _key: string
  }>
  isPaidCourse?: boolean
  pricing?: {
    actualPrice?: number
    discountedPrice?: number
  }
  chapters?: Array<{
    _ref: string
    _type: 'reference'
    _weak?: boolean
    _key: string
    [internalGroqTypeReferenceTo]?: 'chapter'
  }>
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}
export declare const internalGroqTypeReferenceTo: unique symbol


// Source: ./sanity/lib/queries.ts
// Variable: homePageQuery
// Query:   *[_type == "home"][0]{    _id,    overview,    showcaseProjects[]->{      _type,      coverImage,      overview,      "slug": slug.current,      tags,      title,    },    title,  }
export type HomePageQueryResult = null

// Variable: coursesCardsQuery
// Query:   *[_type == 'course'] {    _id,    "slug": slug.current,    title,    image,    isPaidCourse,    pricing,    summary  }
export type CoursesCardsQueryResult = Array<{
  _id: string
  slug: string | null
  title: string | null
  image: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  } | null
  isPaidCourse: boolean | null
  pricing: {
    actualPrice?: number
    discountedPrice?: number
  } | null
  summary: string | null
}>

// Variable: pagesBySlugQuery
// Query:   *[_type == "page" && slug.current == $slug][0] {    _id,    body,    overview,    title,    "slug": slug.current,  }
export type PagesBySlugQueryResult = null

// Variable: projectBySlugQuery
// Query:   *[_type == "project" && slug.current == $slug][0] {    _id,    client,    coverImage,    description,    duration,    overview,    site,    "slug": slug.current,    tags,    title,  }
export type ProjectBySlugQueryResult = null

// Variable: settingsQuery
// Query:   *[_type == "settings"][0]{    footer,    menuItems[]->{      _type,      "slug": slug.current,      title    },    ogImage,  }
export type SettingsQueryResult = null


